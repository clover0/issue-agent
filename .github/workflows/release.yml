name: Release

on:
  push:
    branches: ["main"]

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      pull-requests: write
    outputs:
      tag: ${{ steps.tagpr.outputs.tag }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: app-token
        with:
          app-id: ${{ secrets.TOKEN_GEN_APP_ID }}
          private-key: ${{ secrets.TOKEN_GEN_PRIVATE_KEY }}

      - name: Create PR for release or create tag
        uses: Songmu/tagpr@812f0c28980cb9a1e5cf427b65c1ac6a1d2b4377 # v1.6.1
        id: tagpr
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

  release:
    name: Release
    needs: [prepare]
    permissions:
      contents: write
      id-token: write
      packages: write
      attestations: write
    outputs:
      digest-amd64: ${{ steps.digest-amd64.outputs.digest}}
      digest-arm64: ${{ steps.digest-arm64.outputs.digest}}
    if: needs.prepare.outputs.tag != ''
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3.8.2
        with:
          cosign-release: "v2.4.1"

      - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Docker Login
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: clover0
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: RUN GoReleaser
        id: goreleaser
        uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6.3.0
        with:
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_GITHUB_TOKEN: ${{ secrets.HOMEBREW_GITHUB_TOKEN }}

      - name: Output AMD64 digest
        id: digest-amd64
        env:
          ARTIFACTS: "${{ steps.goreleaser.outputs.artifacts }}"
        run: |
          set -euo pipefail
          image_and_tag=$(echo "$ARTIFACTS" | jq -er 'first(.[] | select (.goarch=="amd64" and .type=="Published Docker Image")) | .path')
          image=$(echo "${image_and_tag}" | cut -d':' -f1)
          sha_digest=$(echo "$ARTIFACTS" |  jq -er 'first(.[] | select (.goarch=="amd64" and .type=="Published Docker Image")) | .extra.Digest')
          echo "name=$image" >> "$GITHUB_OUTPUT"
          echo "digest=$sha_digest" >> "$GITHUB_OUTPUT"

      - name: Output ARM64 digest
        id: digest-arm64
        env:
          ARTIFACTS: "${{ steps.goreleaser.outputs.artifacts }}"
        run: |
          set -euo pipefail
          image_and_tag=$(echo "$ARTIFACTS" | jq -er 'first(.[] | select (.goarch=="arm64" and .type=="Published Docker Image")) | .path')
          image=$(echo "${image_and_tag}" | cut -d':' -f1)
          sha_digest=$(echo "$ARTIFACTS" |  jq -er 'first(.[] | select (.goarch=="arm64" and .type=="Published Docker Image")) | .extra.Digest')

          echo "name=$image" >> "$GITHUB_OUTPUT"
          echo "digest=$sha_digest" >> "$GITHUB_OUTPUT"

      - uses: actions/attest-build-provenance@db473fddc028af60658334401dc6fa3ffd8669fd # v2.3.0
        with:
          subject-name: ghcr.io/clover0/issue-agent
          subject-digest: ${{ steps.digest-amd64.outputs.digest }}
          push-to-registry: true

      - uses: actions/attest-build-provenance@db473fddc028af60658334401dc6fa3ffd8669fd # v2.3.0
        with:
          subject-name: ghcr.io/clover0/issue-agent
          subject-digest: ${{ steps.digest-arm64.outputs.digest }}
          push-to-registry: true

  provenance-amd64:
    needs: [release]
    permissions:
      actions: read
      id-token: write
      packages: write
    # we must use the tag reference
    # https://github.com/slsa-framework/slsa-github-generator/blob/v2.0.0/internal/builders/container/README.md#referencing-the-slsa-generator
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.1.0
    with:
      image: ghcr.io/clover0/issue-agent
      digest: ${{ needs.release.outputs.digest-amd64 }}
      registry-username: clover0
    secrets:
      registry-password: ${{ secrets.GITHUB_TOKEN }}

  provenance-arm64:
    needs: [release]
    permissions:
      actions: read
      id-token: write
      packages: write
    # we must use the tag reference
    # https://github.com/slsa-framework/slsa-github-generator/blob/v2.0.0/internal/builders/container/README.md#referencing-the-slsa-generator
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.1.0
    with:
      image: ghcr.io/clover0/issue-agent
      digest: ${{ needs.release.outputs.digest-arm64 }}
      registry-username: clover0
    secrets:
      registry-password: ${{ secrets.GITHUB_TOKEN }}

  deploy-website:
    needs: [release]
    permissions:
      contents: write
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    defaults:
      run:
        working-directory: website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5.0.0

      - name: Build website pages
        run: |
          mkdir -p site
          docker compose run mkdocs mkdocs build

      - uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
        with:
          path: "website/site"

      - uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
